apiVersion: v1
kind: Template
labels:
  template: jupyter-minimal-notebook
metadata:
  annotations:
    description: A Jupyter Notebook
  name: jupyter-minimal-notebook
message: A jupyter minimal notebook has been created. Log into the workspace with the password you entered.
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JUPYTER_NOTEBOOK_PASSWORD
            value: ${PASSWORD}
          image: s2i-minimal-notebook:${IMAGE_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: s2i-minimal-notebook:${IMAGE_VERSION}
          namespace: openshift
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: my-notebook
  - description: The version of the image 
    displayName: Image Version
    name: IMAGE_VERSION
    required: true
    value: '3.5'
  - description: Password for the application 
    displayName: Notebook Password
    name: PASSWORD
    required: true
